
	$Id$

For information about building the DODS FreeForm source code, see the INSTALL
file.

This file provides basic information about the DODS FreeForm server and its
configuration. For more detailed information, see the Server Installation
Guide at http://www.unidata.ucar.edu/packages/dods/user/install-html/. Also
note that there is a special manual for the FreeForm server that covers
writing format description files in detail. It is available at
http://www.unidata.ucar.edu/packages/dods/user/servers/dff-html/.

The information that follows is mostly up to date, but the Server Install
Guide is probably a better source of information for most users.

----------------------------------------------------------------------------

DODS data servers make it simple to provide others with direct,
over-the-network, access to your data. There is no need to reformat
your data so that a new system can read it. Instead DODS uses the http server
along with a dispatch script and a set of three server programs (Data
Attribute Server, Data Structure Server, and Data Server) to make your
existing data files available to anyone who has access to a program rebuilt
with DODS components.

For more information about DODS, see the URL

    http://unidata.ucar.edu/packages/dods/

ff-dods is a server implementation of National Geophysical Data Center's
FreeForm/FFND, based on the Distributed Oceanographic Data System. The
software contains data servers that can be used along with any DODS client
program to process data served by the ff-dods server.

The server can handle binary, ASCII, and dBASE data files through
FreeForm/FFND format descriptions. It can handle both array and sequence data
types. The data in the data file is read then served using the appropriate
type according to the format description in the required accompanying format
file.

In short, all the data and associate blocks (header information) are
processed. Basic information about the input file is given as Global
attributes as is any header information. The file's data variables are mapped
into the closest Dods data model using the FreeForm/FFND external format
file. The data is reformatted to the Dods data model and served. The user can
refer to the entire data variable using a URL and/or the local file name.
Furthermore, if the user wants to work only with a small part of the data
set, a constraint expression can be supplied along with the URL to save on
network data transmission time. For more information see the file USING.

You can obtain a copy of the latest version of ff-dods software from
http://unidata.ucar.edu//packages/dods/.

Included in this distribution are: 

 - Server programs and their dispatch script (ff-dods, ff-das, ff-dds)
 - Test datasets and sample format files
 - Tools to help in writing FreeForm format files

Questions about ff-dods may be sent to support@unidata.ucar.edu.

SETTING UP A DATA SERVER

Note: this discussion assumes that NCSA World Wide Web server (httpd) is
installed on the workstation which is to be used to serve data. You do not
need to use this particular web server, any server that supports CGI 1.1
(Netscape, Apache, CERN, ...) will work. If you do not have a web server
installed, first install one and then continue installing the DODS server.
For information on various servers, see: 

NCSA		http://hoohoo.ncsa.uiuc.edu/
Apache		http://www.apache.org/
CERN/W3C	http://www.w3c.org/

To set up a DODS data server using the FreeForm server implementation, first
follow the instructions in the INSTALL document. Four programs comprise the
data server: a CGI (nph-dods) which is used to dispatch each data request to
the correct filter program and three filter programs (ff_das, ff_dds,
ff_dods). Make sure that the CGI module `nph-dods' is somewhere where the
http server can run CGI modules.

Files that are to be served by the DODS server must either be within the http
server's document root directory or they must be accessible from the document
root directory using links. To find out which directory is the http server's
document root, look in the httpd configuration file.

For example, to make the file test0.dat available to users, both the data
file and its format description file must be either placed or linked within 
the document root directory. On my workstation the document root directory is 
/usr/local/spool/http so the file must be moved or copied to that directory 
or one of its subdirectories or I must create a symbolic link in that
directory or one of its subdirectories to the files. I have created a
directory `data' in the http server's document root directory and copied 
the file test0.dat and test0.fmt there. The URL to that data file is:

	  http://dods.gso.uri.edu/cgi-bin/nph-dods/data/test0.dat

Note that after the machine name (dods.gso.uri.edu) the URL contains the path
to the DODS data server CGI and that the path to the data (relative to the
document root directory) *follows* the CGI name.

Also note that to limit access to the server to a specific set of machines,
place the CGI within the document root directory (this works for NCSA version
1.5 and later and also for Apache 1.1.1 and later). See the file SECURITY for
a detailed description of the types of security DODS provides for data and
how to install servers to take advantage of those features.

Finally, any additional information about the data file can be placed in the
ancillary attribute (<file_name>.das) file. The ancillary attribute file
provides a way to augment the attribute information provided by the DODS
server without actually modifying the dataset itself.

WRITING FORMAT DESCRIPTION FILES

Any data file served by ff-dods must be accompanied by a format description
file (<file_name>.fmt). The format description file defines the formats of
headers and data in the data file. The ff-dods server uses the FreeForm easy-
to-use data describing mechanism. The following shows a few examples of data
description files and their translation into dods data structure, for more
information about format descriptions, please see the DODS-FreeFrom's user
guide.

1) Format to read a dBASE sequence file 
   
       dbase_input_data "ISEE3_data"
       t 1 15 double 6
       Bx 16 30 double 6
       By 31 45 double 6
       Bz 46 60 double 6
       Bx2 61 75 double 6

   The above format file will map into the following DODS Data Structure:

     Dataset {
       Sequence {
        Float64 t;
        Float64 Bx;
        Float64 By;
        Float64 Bz;
        Float64 Bx2;
       } ISEE3_data;
     } test5;


2) Format to read a binary array file

   binary_input_data "array_in"
   x 1 4 ARRAY["lat" 1 to 10]["lon" 1 to 10] of int32 0
   y 5 12 ARRAY["records" 1 to 10] of float64 15

   The above format file will map into the following DODS Data Structure:

   Dataset {
      Int32 x[lat = 10][lon = 10];
      Float64 y[records = 10];
   } test3;


3) Format to read an ASCII sequence with a file header

      ASCII_file_header "header"
      count 1 2 short 0
      description 4 24 char 0

      ASCII_input_data "data"
      value 1 2 short 0

   The above format file will map into the following DODS Data Structure:

       Dataset {
	  Sequence {
	  Int32 value;
	  } data;
	} test0;

For more examples see the test files in the ff-test subdirectory.         

Good Luck :-)
Reza Nekovei

Note: The FreeForm library, which is in teh subdirectory 'FFND,' carries
the following notice regarding its copyright protection:

 * CAVEAT:
 * No claims are made as to the suitability of the accompanying
 * source code for any purpose.  Although this source code has been
 * used by the NOAA, no warranty, expressed or implied, is made by
 * NOAA or the United States Government as to the accuracy and
 * functioning of this source code, nor shall the fact of distribution
 * constitute any such endorsement, and no responsibility is assumed
 * by NOAA in connection therewith.  The source code contained
 * within was developed by an agency of the U.S. Government.
 * NOAA's National Geophysical Data Center has no objection to the
 * use of this source code for any purpose since it is not subject to
 * copyright protection in the U.S.  If this source code is incorporated
 * into other software, a statement identifying this source code may be
 * required under 17 U.S.C. 403 to appear with any copyright notice.
