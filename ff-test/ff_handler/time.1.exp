
#
# $Id$
#
# Tests for the time interface.

global comp_output		# contains output from ff_dods_start
global verbose			# this and srcdir are set by runtest.exp
global srcdir

source "ff-test/test-files.tcl"

set test_name "Time Interface Tests"

# The `1' in compare_stdout means call xfail if the test fails.

# Test the Time interface.

# Single argument to time()
ff_dods_start "$avhrr -e DODS_URL&time(\"17:45:00\")"
compare_stdout "ff-test/avhrr_time_ce1.bin" "$test_name: Single time" 0 "match"

# Two arguments to time()
ff_dods_start "$avhrr -e DODS_URL&time(\"17:00:00\",\"18:00:00\")"
compare_stdout "ff-test/avhrr_time_ce2.bin" "$test_name: Time range" 0 "match"

# Return values from DODS_Time()
ff_dods_start "$avhrr -e DODS_URL,DODS_Time(GSO_AVHRR)&time(\"17:00:00\",\"18:00:00\")"
compare_stdout "ff-test/avhrr_time_ce3.bin" "$test_name: Time return" 0 "match"

# Alternative form of the date. Broken 1/6/99 jhrg
ff_dods_start "$avhrr -e DODS_URL&time(\"14:45\")"
compare_stdout /dev/null "$test_name: Alternative date syntax" 1

# Bad syntax to time(), etc.
# NB: These all fail right now since date parsing is not exactly bullet
# proof... 1/6/99 jhrg

ff_dods_start "$avhrr -e DODS_URL&time(\"14/45/00\")"
compare_stdout /dev/null "$test_name: Bad time syntax" 1

ff_dods_start "$avhrr -e DODS_URL&date(\"14:45:00\",)"
compare_stdout /dev/null "$test_name: Bad time() call syntax" 1

ff_dods_start "$avhrr -e DODS_URL&time()"
compare_stdout /dev/null "$test_name: Bad time call syntax" 1

# Check bad syntax to the projection functions DODS_Time()

ff_dods_start "$avhrr -e DODS_URL,DODS_Time(GSO_AVHR)&time(\"14:45:00\")"
compare_stdout /dev/null "$test_name: Misspelled variable name to DODS_Time()" 1 "match"

